name: Merge Branches To Main

on:
  workflow_dispatch:
    inputs:
      branches:
        description: Comma-separated list of branches to merge
        required: true
        default: drona,naik
  pull_request:
    branches:
      - main

permissions:
  contents: write

jobs:
  merge:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0
      - name: Configure Git
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"
      - name: Sync main
        run: |
          git fetch origin main
          git reset --hard origin/main
      - name: Determine branches
        id: determine
        env:
          DISPATCH_BRANCHES: ${{ github.event.inputs.branches }}
          PR_BRANCH: ${{ github.event.pull_request.head.ref }}
          EVENT_NAME: ${{ github.event_name }}
        run: |
          if [ "$EVENT_NAME" = "workflow_dispatch" ]; then
            echo "branches=$DISPATCH_BRANCHES" >> "$GITHUB_OUTPUT"
          else
            echo "branches=$PR_BRANCH" >> "$GITHUB_OUTPUT"
          fi
      - name: Merge branches
        env:
          BRANCH_LIST: ${{ steps.determine.outputs.branches }}
        run: |
          if [ -z "$BRANCH_LIST" ]; then
            echo "No branches provided"
            exit 0
          fi
          IFS=',' read -ra branches <<< "$BRANCH_LIST"
          for branch in "${branches[@]}"; do
            trimmed="$(echo "$branch" | xargs)"
            if [ -n "$trimmed" ]; then
              git fetch origin "$trimmed"
              git merge --no-ff --no-edit "origin/$trimmed"
            fi
          done
      - name: Push
        run: |
          if git diff --quiet origin/main..main; then
            exit 0
          fi
          git push origin main
